# -*- coding: utf-8 -*-
# vispy: gallery 2
# -----------------------------------------------------------------------------
# Copyright (c) Vispy Development Team. All Rights Reserved.
# Distributed under the (new) BSD License. See LICENSE.txt for more info.
# -----------------------------------------------------------------------------
"""
Candle with Animation and Axis 
=====================
"""

import numpy as np
from vispy import scene, app
from io import StringIO


if __name__ == "__main__":

    data = "\
    127.489998,128.880005,126.919998,127.830002\n\
    127.629997,128.779999,127.449997,128.720001\n\
    128.479996,129.029999,128.330002,128.449997\n\
    128.619995,129.5,128.050003,129.5\n\
    130.020004,133.0,129.660004,133.0\n\
    132.940002,133.600006,131.169998,132.169998\n\
    131.559998,131.600006,128.149994,128.789993\n\
    128.789993,130.869995,126.610001,130.419998\n\
    130.0,130.570007,128.240005,128.460007\n\
    129.25,130.279999,128.300003,129.089996\n\
    128.960007,129.520004,128.089996,129.360001\n\
    129.100006,129.559998,128.320007,128.539993\n\
    128.580002,128.75,125.760002,126.410004\n\
    128.399994,129.369995,126.260002,126.599998\n\
    127.959999,129.570007,125.059998,127.139999\n\
    126.410004,127.220001,123.800003,124.510002\n\
    124.75,124.769997,122.110001,122.239998\n\
    122.309998,124.900002,121.629997,124.449997\n\
    124.400002,125.400002,122.580002,123.589996\n\
    123.879997,124.949997,122.870003,124.949997\n\
    125.900002,127.32,125.650002,127.040001\n\
    127.0,129.160004,126.370003,128.470001\n\
    128.75,129.25,127.400002,127.5\n\
    128.25,128.399994,125.160004,125.900002\n\
    127.120003,127.849998,126.519997,127.209999\n\
    127.230003,128.039993,126.559998,126.690002\n\
    126.540001,126.82,123.379997,123.379997\n\
    122.760002,124.879997,122.599998,124.239998\n\
    124.57,124.699997,122.910004,123.25\n\
    124.050003,126.400002,124.0,126.370003\n\
    126.089996,126.489998,124.360001,124.43\n\
    124.82,125.120003,123.099998,124.25\n\
    125.029999,125.559998,124.190002,125.32\n\
    124.470001,127.510002,124.330002,127.349998\n\
    127.639999,128.119995,125.980003,126.010002\n\
    125.849998,126.400002,124.970001,125.599998\n\
    125.849998,126.580002,124.660004,126.559998\n\
    125.949997,127.209999,125.260002,127.099998\n\
    128.369995,128.570007,126.610001,126.849998\n\
    127.0,127.290001,125.910004,126.300003\n\
    126.410004,127.129997,126.010002,126.779999\n\
    126.279999,127.099998,126.110001,126.169998\n\
    125.550003,126.139999,124.459999,124.75\n\
    125.57,128.119995,125.169998,127.599998\n\
    128.100006,128.199997,126.669998,126.910004\n\
    126.989998,128.869995,126.32,128.619995\n\
    128.300003,130.419998,128.139999,129.669998\n\
    130.490005,130.630005,129.229996,130.279999\n\
    132.309998,133.130005,131.149994,132.649994\n\
    134.460007,134.539993,129.570007,130.559998\n\
    130.160004,131.589996,128.300003,128.639999\n\
    128.639999,128.639999,124.580002,125.150002\n\
    126.099998,130.130005,125.300003,128.949997\n\
    129.5,130.570007,128.259995,128.699997\n\
    128.149994,128.449997,125.779999,125.800003\n\
    126.559998,126.75,123.360001,125.010002\n\
    124.769997,126.080002,124.019997,125.260002\n\
    126.68,127.620003,126.110001,127.620003\n\
    127.389999,127.559998,125.629997,126.32\n\
    125.599998,126.879997,124.82,125.870003\n\
    126.150002,127.190002,125.870003,126.010002\n\
    127.410004,128.949997,127.160004,128.949997\n\
    129.070007,129.490005,128.210007,128.770004\n\
    128.380005,130.720001,128.360001,130.190002\n\
    130.690002,130.880005,129.639999,130.070007\n\
    130.0,130.979996,129.339996,130.059998\n\
    130.070007,131.630005,129.830002,131.389999\n\
    131.600006,132.970001,131.399994,132.539993\n\
    132.600006,132.910004,129.119995,129.619995\n\
    130.339996,132.259995,130.050003,132.039993\n\
    131.860001,131.949997,131.100006,131.779999\n\
    131.229996,131.449997,129.899994,130.279999\n\
    130.279999,131.389999,130.050003,130.539993\n\
    129.860001,130.660004,129.320007,129.960007\n\
    130.660004,130.940002,129.899994,130.119995\n\
    129.580002,130.580002,128.910004,129.360001\n\
    129.5,129.690002,128.360001,128.649994\n\
    128.899994,129.210007,126.830002,127.800003\n\
    126.699997,128.080002,125.620003,127.419998\n\
    127.919998,129.339996,127.849998,128.880005\n\
    129.179993,130.179993,128.479996,128.589996\n\
    128.190002,128.330002,127.110001,127.169998\n\
    126.099998,127.239998,125.709999,126.919998\n\
    127.029999,127.849998,126.370003,127.599998\n\
    127.720001,127.879997,126.739998,127.300003\n\
    127.230003,128.309998,127.220001,127.879997\n\
    127.709999,127.82,126.400002,126.599998\n\
    127.489998,128.059998,127.080002,127.610001\n\
    127.480003,127.610001,126.879997,127.029999\n\
    127.209999,129.800003,127.120003,128.110001\n\
    128.860001,129.199997,127.5,127.5\n\
    127.669998,127.989998,126.510002,126.75\n\
    125.459999,126.470001,124.480003,124.529999\n\
    125.57,126.120003,124.860001,125.43\n\
    126.900002,126.940002,125.989998,126.599998\n\
    126.43,126.690002,125.769997,126.440002\n\
    124.940002,126.230003,124.849998,126.0\n\
    125.889999,126.150002,123.769997,125.690002\n\
    124.480003,124.639999,122.540001,122.57\n\
    123.849998,124.059998,119.220001,120.07"

    a = np.genfromtxt(StringIO(data), delimiter=",")

    a = np.vstack((a, a))
    a = np.vstack((a, a))
    a = np.vstack((a, a))
    a = np.vstack((a, a))

    i = 5.0
    ii = 5

    def update(ev):
        global i, ii
        i = i + 1
        if int(i) != ii:
            if int(i) > 500:
                i = 0
            candle.update_data(ohlc=a[int(i):int(i+1)+1000], upcolor=[0, 1, 0], width=0.8, downcolor=[1, 0, 0])
            ii = int(i)

    canvas = scene.SceneCanvas(keys='interactive', vsync=False)
    canvas.size = 800, 600
    canvas.show()

    grid = canvas.central_widget.add_grid()

    vb1 = grid.add_view(row=0, col=1, camera='panzoom')

    x_axis1 = scene.AxisWidget(orientation='bottom')
    x_axis1.stretch = (1, 0.1)
    grid.add_widget(x_axis1, row=1, col=1)
    x_axis1.link_view(vb1)
    y_axis1 = scene.AxisWidget(orientation='left')
    y_axis1.stretch = (0.1, 1)
    grid.add_widget(y_axis1, row=0, col=0)
    y_axis1.link_view(vb1)

    grid_lines1 = scene.visuals.GridLines(parent=vb1.scene)

    candle = scene.Candle(a, [0, 1, 0], [1, 0, 0], width=0.8, parent=vb1.scene)

    vb1.camera.set_range()

    timer = app.Timer()
    timer.connect(update)
    timer.start(0)

    canvas.measure_fps()
    app.run()
